"use strict";(self.webpackChunkreact_native_android_widget_docs=self.webpackChunkreact_native_android_widget_docs||[]).push([[9557],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),u=p(r),g=a,f=u["".concat(c,".").concat(g)]||u[g]||s[g]||i;return r?n.createElement(f,o(o({ref:t},l),{},{components:r})):n.createElement(f,o({ref:t},l))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var d={};for(var c in t)hasOwnProperty.call(t,c)&&(d[c]=t[c]);d.originalType=e,d.mdxType="string"==typeof e?e:a,o[1]=d;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},8415:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>d,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_position:4,sidebar_label:"Update Widget"},o="Update Widget",d={unversionedId:"update-widget",id:"update-widget",title:"Update Widget",description:"Scheduling a widget update using android:updatePeriodMillis is out of scope for this library.",source:"@site/docs/update-widget.md",sourceDirName:".",slug:"/update-widget",permalink:"/react-native-android-widget/docs/update-widget",draft:!1,editUrl:"https://github.com/sAleksovski/react-native-android-widget/tree/master/docs/docs/update-widget.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"Update Widget"},sidebar:"default",previous:{title:"SvgWidget",permalink:"/react-native-android-widget/docs/primitives/svg-widget"},next:{title:"Handling Clicks",permalink:"/react-native-android-widget/docs/handling-clicks"}},c={},p=[],l={toc:p};function s(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"update-widget"},"Update Widget"),(0,a.kt)("p",null,"Scheduling a widget update using ",(0,a.kt)("inlineCode",{parentName:"p"},"android:updatePeriodMillis")," is out of scope for this library."),(0,a.kt)("p",null,"There are a couple of community libraries that can be used to schedule a background task, within which you can use ",(0,a.kt)("a",{parentName:"p",href:"/react-native-android-widget/docs/api/request-widget-update"},(0,a.kt)("inlineCode",{parentName:"a"},"requestWidgetUpdate"))," to update a widget."),(0,a.kt)("p",null,"Example:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.expo.dev/versions/latest/sdk/background-fetch/"},(0,a.kt)("inlineCode",{parentName:"a"},"expo-background-fetch"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/Rapsssito/react-native-background-actions"},(0,a.kt)("inlineCode",{parentName:"a"},"react-native-background-actions"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://reactnative.dev/docs/headless-js-android"},(0,a.kt)("inlineCode",{parentName:"a"},"HeadlessJS")))))}s.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkreact_native_android_widget_docs=self.webpackChunkreact_native_android_widget_docs||[]).push([[6971],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),d=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(r),m=a,b=p["".concat(s,".").concat(m)]||p[m]||u[m]||i;return r?n.createElement(b,o(o({ref:t},c),{},{components:r})):n.createElement(b,o({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},7883:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>w,contentTitle:()=>y,default:()=>T,frontMatter:()=>g,metadata:()=>h,toc:()=>k});var n=r(7462),a=r(7294),i=r(3905),o=r(6010),l=r(2389),s=r(7392),d=r(7094),c=r(2466);const u="tabList__CuJ",p="tabItem_LNqP";function m(e){var t;const{lazy:r,block:i,defaultValue:l,values:m,groupId:b,className:v}=e,f=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=m??f.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),y=(0,s.l)(g,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===l?l:l??(null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)??f[0].props.value;if(null!==h&&!g.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:w,setTabGroupChoices:k}=(0,d.U)(),[O,T]=(0,a.useState)(h),E=[],{blockElementScrollPositionUntilNextRender:N}=(0,c.o5)();if(null!=b){const e=w[b];null!=e&&e!==O&&g.some((t=>t.value===e))&&T(e)}const x=e=>{const t=e.currentTarget,r=E.indexOf(t),n=g[r].value;n!==O&&(N(t),T(n),null!=b&&k(b,String(n)))},_=e=>{var t;let r=null;switch(e.key){case"Enter":x(e);break;case"ArrowRight":{const t=E.indexOf(e.currentTarget)+1;r=E[t]??E[0];break}case"ArrowLeft":{const t=E.indexOf(e.currentTarget)-1;r=E[t]??E[E.length-1];break}}null==(t=r)||t.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":i},v)},g.map((e=>{let{value:t,label:r,attributes:i}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:e=>E.push(e),onKeyDown:_,onClick:x},i,{className:(0,o.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":O===t})}),r??t)}))),r?(0,a.cloneElement)(f.filter((e=>e.props.value===O))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==O})))))}function b(e){const t=(0,l.Z)();return a.createElement(m,(0,n.Z)({key:String(t)},e))}const v="tabItem_Ymn6";function f(e){let{children:t,hidden:r,className:n}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(v,n),hidden:r},t)}const g={sidebar_position:1,sidebar_label:"Getting Started"},y="React Native Android Widget",h={unversionedId:"index",id:"index",title:"React Native Android Widget",description:"React Native Android Widget is an open source library for building android widgets using React Native - without touching the native side.",source:"@site/docs/index.md",sourceDirName:".",slug:"/",permalink:"/react-native-android-widget/docs/",draft:!1,editUrl:"https://github.com/sAleksovski/react-native-android-widget/tree/master/docs/docs/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Getting Started"},sidebar:"default",next:{title:"Widget Design",permalink:"/react-native-android-widget/docs/tutorial/widget-design"}},w={},k=[{value:"Getting Started",id:"getting-started",level:2}],O={toc:k};function T(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},O,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"react-native-android-widget"},"React Native Android Widget"),(0,i.kt)("p",null,"React Native Android Widget is an open source library for building android widgets using React Native - without touching the native side."),(0,i.kt)("p",null,"Get started building by installing React Native Android Widget or following our ",(0,i.kt)("a",{parentName:"p",href:"/react-native-android-widget/docs/tutorial/widget-design"},"First Widget Tutorial")," to learn the main concepts."),(0,i.kt)("h2",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"Get started by ",(0,i.kt)("strong",{parentName:"p"},"installing the library"),"."),(0,i.kt)(b,{mdxType:"Tabs"},(0,i.kt)(f,{value:"npm",label:"npm",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,"npm install --save react-native-android-widget")),(0,i.kt)(f,{value:"yarn",label:"yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,"yarn add react-native-android-widget"))))}T.isMDXComponent=!0}}]);
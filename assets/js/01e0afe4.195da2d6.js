"use strict";(self.webpackChunkreact_native_android_widget_docs=self.webpackChunkreact_native_android_widget_docs||[]).push([[7291],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),g=l(n),m=i,u=g["".concat(s,".").concat(m)]||g[m]||p[m]||a;return n?r.createElement(u,o(o({ref:t},c),{},{components:n})):r.createElement(u,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=g;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d.mdxType="string"==typeof e?e:i,o[1]=d;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},3112:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>d,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:1},o="Widget Design",d={unversionedId:"tutorial/widget-design",id:"tutorial/widget-design",title:"Widget Design",description:"This library provides a few primitives that we can use to create widgets.",source:"@site/docs/tutorial/widget-design.md",sourceDirName:"tutorial",slug:"/tutorial/widget-design",permalink:"/react-native-android-widget/docs/tutorial/widget-design",draft:!1,editUrl:"https://github.com/sAleksovski/react-native-android-widget/tree/master/docs/docs/tutorial/widget-design.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"default",previous:{title:"Getting Started",permalink:"/react-native-android-widget/docs/"},next:{title:"Widget Preview",permalink:"/react-native-android-widget/docs/tutorial/widget-preview"}},s={},l=[],c={toc:l};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"widget-design"},"Widget Design"),(0,i.kt)("p",null,"This library provides a few primitives that we can use to create widgets."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-native-android-widget/docs/primitives/flex-widget"},"FlexWidget")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-native-android-widget/docs/primitives/overlap-widget"},"OverlapWidget")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-native-android-widget/docs/primitives/list-widget"},"ListWidget")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-native-android-widget/docs/primitives/text-widget"},"TextWidget")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-native-android-widget/docs/primitives/image-widget"},"ImageWidget")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-native-android-widget/docs/primitives/icon-widget"},"IconWidget")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/react-native-android-widget/docs/primitives/svg-widget"},"SvgWidget"))),(0,i.kt)("p",null,"You can read more about them and their props in their respective pages."),(0,i.kt)("admonition",{title:"Hooks",type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"Widgets ",(0,i.kt)("strong",{parentName:"p"},"must not")," use any hooks. They ",(0,i.kt)("strong",{parentName:"p"},"must")," be functions that return some of the primitives."),(0,i.kt)("p",{parentName:"admonition"},"We can create custom components, but at the end they must use only the primitives, not ",(0,i.kt)("inlineCode",{parentName:"p"},"View"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Text"),", or any other React Native component."),(0,i.kt)("p",{parentName:"admonition"},"We can also use conditions, for/map, standard jsx. They cannot be async.")),(0,i.kt)("p",null,'We\'ll start with a Basic widget that says "Hello".'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="HelloWidget.tsx"',title:'"HelloWidget.tsx"'},"import React from 'react';\nimport { FlexWidget, TextWidget } from 'react-native-android-widget';\n\nexport function HelloWidget() {\n  return (\n    <FlexWidget\n      style={{\n        height: 'match_parent',\n        width: 'match_parent',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#ffffff',\n        borderRadius: 16,\n      }}\n    >\n      <TextWidget\n        text=\"Hello\"\n        style={{\n          fontSize: 32,\n          fontFamily: 'Inter',\n          color: '#000000',\n        }}\n      />\n    </FlexWidget>\n  );\n}\n")))}p.isMDXComponent=!0}}]);